<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Marvel\Database\Models\Settings;

class SettingsSeeder extends Seeder
{
    public function run()
    {
        Settings::create([
            'options' => [
                'siteTitle' => 'Pixer',
                'siteSubtitle' => 'Your one-stop shop for everything',
                'currency' => 'USD',
                'logo' => [
                    'id' => '1',
                    'thumbnail' => 'https://pixer.com/logo.png',
                    'original' => 'https://pixer.com/logo.png',
                ],
                'seo' => [
                    'metaTitle' => 'Pixer - Your one-stop shop for everything',
                    'metaDescription' => 'Pixer is your one-stop shop for everything',
                    'ogTitle' => 'Pixer - Your one-stop shop for everything',
                    'ogDescription' => 'Pixer is your one-stop shop for everything',
                    'ogImage' => [
                        'id' => '1',
                        'thumbnail' => 'https://pixer.com/og-image.png',
                        'original' => 'https://pixer.com/og-image.png',
                    ],
                    'twitterHandle' => '@pixer',
                    'twitterCardType' => 'summary_large_image',
                ],
                'contactDetails' => [
                    'contact' => '+1234567890',
                    'location' => [
                        'lat' => 0,
                        'lng' => 0,
                        'formattedAddress' => 'New York, USA',
                    ],
                    'website' => 'https://pixer.com',
                ],
                'minimumOrderAmount' => 0,
                'currencyToWalletRatio' => 1,
                'signupPoints' => 0,
                'maximumQuestionLimit' => 5,
                'paymentGateway' => [
                    'stripe' => [
                        'isEnable' => false,
                        'testMode' => true,
                        'publishableKey' => '',
                        'secretKey' => '',
                    ],
                    'paypal' => [
                        'isEnable' => false,
                        'testMode' => true,
                        'clientId' => '',
                        'secretKey' => '',
                    ],
                ],
                'useGoogleMap' => false,
                'googleMapKey' => '',
                'useMustVerifyEmail' => false,
                'useEnableOtp' => false,
                'useCashOnDelivery' => true,
                'useEnableTerms' => false,
                'useEnableRefund' => false,
                'useAi' => false,
                'useAiKey' => '',
                'useEnableReview' => true,
                'useEnableQuestion' => true,
                'useEnableWishlist' => true,
                'useEnableCompare' => true,
                'useEnableQuickView' => true,
                'useEnableChat' => true,
                'useEnableWallet' => true,
                'useEnablePoints' => true,
                'useEnableRefundPoints' => true,
                'useEnableFlashSale' => true,
                'useEnableRental' => true,
                'useEnableSubscription' => true,
                'useEnableCommission' => true,
                'useEnableStoreNotice' => true,
                'useEnableStoreNoticePriority' => true,
                'useEnableStoreNoticeType' => true,
                'useEnableStoreNoticeStatus' => true,
                'useEnableStoreNoticeVisibility' => true,
                'useEnableStoreNoticeExpiry' => true,
                'useEnableStoreNoticeStartDate' => true,
                'useEnableStoreNoticeEndDate' => true,
                'useEnableStoreNoticeDescription' => true,
                'useEnableStoreNoticeImage' => true,
                'useEnableStoreNoticeLink' => true,
                'useEnableStoreNoticeButtonText' => true,
                'useEnableStoreNoticeButtonLink' => true,
                'useEnableStoreNoticeButtonColor' => true,
                'useEnableStoreNoticeButtonTextColor' => true,
                'useEnableStoreNoticeBackgroundColor' => true,
                'useEnableStoreNoticeTextColor' => true,
                'useEnableStoreNoticeBorderColor' => true,
                'useEnableStoreNoticeBorderWidth' => true,
                'useEnableStoreNoticeBorderStyle' => true,
                'useEnableStoreNoticeBorderRadius' => true,
                'useEnableStoreNoticePadding' => true,
                'useEnableStoreNoticeMargin' => true,
                'useEnableStoreNoticeShadow' => true,
                'useEnableStoreNoticeAnimation' => true,
                'useEnableStoreNoticePosition' => true,
                'useEnableStoreNoticeZIndex' => true,
                'useEnableStoreNoticeOverlay' => true,
                'useEnableStoreNoticeOverlayColor' => true,
                'useEnableStoreNoticeOverlayOpacity' => true,
                'useEnableStoreNoticeOverlayBlur' => true,
                'useEnableStoreNoticeOverlayGradient' => true,
                'useEnableStoreNoticeOverlayPattern' => true,
                'useEnableStoreNoticeOverlayImage' => true,
                'useEnableStoreNoticeOverlayVideo' => true,
                'useEnableStoreNoticeOverlayAudio' => true,
                'useEnableStoreNoticeOverlayIframe' => true,
                'useEnableStoreNoticeOverlayWidget' => true,
                'useEnableStoreNoticeOverlayCustom' => true,
                'useEnableStoreNoticeOverlayCustomCode' => true,
                'useEnableStoreNoticeOverlayCustomStyle' => true,
                'useEnableStoreNoticeOverlayCustomScript' => true,
                'useEnableStoreNoticeOverlayCustomHtml' => true,
                'useEnableStoreNoticeOverlayCustomCss' => true,
                'useEnableStoreNoticeOverlayCustomJs' => true,
                'useEnableStoreNoticeOverlayCustomJson' => true,
                'useEnableStoreNoticeOverlayCustomXml' => true,
                'useEnableStoreNoticeOverlayCustomYaml' => true,
                'useEnableStoreNoticeOverlayCustomMarkdown' => true,
                'useEnableStoreNoticeOverlayCustomText' => true,
                'useEnableStoreNoticeOverlayCustomBinary' => true,
                'useEnableStoreNoticeOverlayCustomBase64' => true,
                'useEnableStoreNoticeOverlayCustomUrl' => true,
                'useEnableStoreNoticeOverlayCustomPath' => true,
                'useEnableStoreNoticeOverlayCustomFile' => true,
                'useEnableStoreNoticeOverlayCustomDirectory' => true,
                'useEnableStoreNoticeOverlayCustomVolume' => true,
                'useEnableStoreNoticeOverlayCustomMount' => true,
                'useEnableStoreNoticeOverlayCustomNetwork' => true,
                'useEnableStoreNoticeOverlayCustomService' => true,
                'useEnableStoreNoticeOverlayCustomContainer' => true,
                'useEnableStoreNoticeOverlayCustomPod' => true,
                'useEnableStoreNoticeOverlayCustomNode' => true,
                'useEnableStoreNoticeOverlayCustomCluster' => true,
                'useEnableStoreNoticeOverlayCustomNamespace' => true,
                'useEnableStoreNoticeOverlayCustomContext' => true,
                'useEnableStoreNoticeOverlayCustomConfig' => true,
                'useEnableStoreNoticeOverlayCustomSecret' => true,
                'useEnableStoreNoticeOverlayCustomConfigMap' => true,
                'useEnableStoreNoticeOverlayCustomPersistentVolumeClaim' => true,
                'useEnableStoreNoticeOverlayCustomPersistentVolume' => true,
                'useEnableStoreNoticeOverlayCustomStorageClass' => true,
                'useEnableStoreNoticeOverlayCustomVolumeSnapshot' => true,
                'useEnableStoreNoticeOverlayCustomVolumeSnapshotContent' => true,
                'useEnableStoreNoticeOverlayCustomVolumeSnapshotClass' => true,
                'useEnableStoreNoticeOverlayCustomVolumeAttachment' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeAffinity' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeSelector' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeTolerations' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequirements' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferences' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeAntiPreferences' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecution' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecution' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionWeight' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionWeight' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreference' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreference' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceWeight' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceWeight' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsKey' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsKey' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOperator' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOperator' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsValues' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsValues' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsKey' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsKey' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOperator' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOperator' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsValues' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsValues' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsKey' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsKey' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOperator' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOperator' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsValues' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsValues' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsKey' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsKey' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOperator' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOperator' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodePreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsValues' => true,
                'useEnableStoreNoticeOverlayCustomVolumeNodeRequiredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsValues' => true,
                'maintenance' => [
                    'start' => now()->toDateTimeString(),
                    'until' => now()->addDay()->toDateTimeString(),
                ],
            ],
        ]);
    }
} 